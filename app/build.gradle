apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.tony.builder.game2048"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildToolsVersion = '29.0.2'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0-alpha02'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha04'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha04'

    // Android architecture component
    // https://developer.android.com/topic/libraries/architecture/adding-components
    // add androidX lifecycle support
    def lifecycle_version = "2.2.0"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    /* dagger2 */
//    implementation 'com.google.dagger:dagger:2.26'
//    implementation 'com.google.dagger:dagger-android:2.26'
//    implementation 'com.google.dagger:dagger-android-support:2.26'
//    annotationProcessor 'com.google.dagger:dagger-compiler:2.26'
//    annotationProcessor 'com.google.dagger:dagger-android-processor:2.26'

    implementation project(':libboardview')
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}
